package com.abhi.uniqueidentification;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ArrayNode;

class User {

	public static void main(String[] args) throws IOException {
		ObjectMapper objectMapper = new ObjectMapper();

		String json = "{\n" + "	\"metadata\": {\n" + "		\"id\": \"1c13a0cb-116e-4768-86e6-54727548ca40\",\n"
				+ "		\"routingKey\": \"com.wabtec.pds.devicemanagement.dto.DeviceStateUpdateGram\",\n"
				+ "		\"source\": \"device-management\",\n"
				+ "		\"sourceTimestamp\": \"2022-12-15T14:22:44.403Z\",\n"
				+ "		\"processTimestamp\": \"2022-12-15T14:22:44.403Z\",\n" + "		\"version\": \"v1.0.0\"\n"
				+ "	},\n"
				+ "	\"routingMessage\": \"{\\\"timestamp\\\":\\\"2022-12-15T14:22:44.403350Z\\\",\\\"deviceInfos\\\":[{\\\"deviceId\\\":32236585,\\\"deviceType\\\":\\\"PHYSICAL_CONTROLPOINT_DEV\\\",\\\"territoryIds\\\":[39468160],\\\"fieldIndications\\\":[\\\"CP_FIELD_LOCAL_CONTROL_OFF_IND\\\"],\\\"officeControls\\\":[\\\"INITIALIZED\\\"],\\\"displayCounter\\\":16},{\\\"deviceId\\\":32236585,\\\"deviceType\\\":\\\"PHYSICAL_CONTROLPOINT_DEV\\\",\\\"territoryIds\\\":[39468160],\\\"fieldIndications\\\":[\\\"CP_FIELD_LOCAL_CONTROL_OFF_IND\\\"],\\\"officeControls\\\":[\\\"INITIALIZED\\\"],\\\"displayCounter\\\":16}],\\\"codeStationInfos\\\":[{\\\"codeStationId\\\":32236590,\\\"territoryIds\\\":[39468160],\\\"activeStates\\\":[\\\"INITIALIZED\\\",\\\"CS_TRANSMITTING_CONTROLS\\\",\\\"CS_RECEIVING_INDICATIONS\\\"]}]}\"\n"
				+ "}";

		JsonNode jsonNode = objectMapper.readTree(json);
		// System.out.println(jsonNode);

		JsonNode jsonNode2 = jsonNode.get("routingMessage");

		JsonNode jsonNode3 = objectMapper.readTree(jsonNode2.asText());

		// System.out.println(jsonNode3);
		ArrayNode datasetArray = (ArrayNode) jsonNode3.get("deviceInfos");

		Map<String, String> map = new HashMap<>();
		map.put("deviceId", "");
		map.put("deviceType", "");
		map.put("fieldIndications", "");
		map.put("officeControls", "");

		for (JsonNode jsonNode1 : datasetArray) {

			if (map.containsKey("deviceId")) {
				if (map.get("deviceId").isEmpty()) {
					map.put("deviceId", jsonNode1.get("deviceId").asText());
				} else {
					map.put("deviceId", map.get("deviceId").concat(",").concat(jsonNode1.get("deviceId").asText()));
				}
			}
			if (map.containsKey("deviceType")) {
				if (map.get("deviceType").isEmpty()) {

					map.put("deviceType", jsonNode1.get("deviceType").asText());
				} else {

					map.put("deviceType", map.get("deviceType").concat(",").concat(jsonNode1.get("deviceType").asText()));
				}

			}
			if (map.containsKey("officeControls")) {

				Iterator<JsonNode> iterator = jsonNode1.get("officeControls").iterator();

				while (iterator.hasNext()) {
					JsonNode next = iterator.next();
					if (map.get("officeControls").isEmpty()) {
						System.out.println(next.asText());
						map.put("officeControls", next.asText());
					} else {
						map.put("officeControls", map.get("officeControls").concat(",").concat(next.asText()));
					}
				}
			}
			if (map.containsKey("fieldIndications")) {

				Iterator<JsonNode> iterator = jsonNode1.get("fieldIndications").iterator();
				while (iterator.hasNext()) {
					JsonNode next = iterator.next();
					if (map.get("fieldIndications").isEmpty()) {
						System.out.println(next.asText());
						map.put("fieldIndications", next.asText());
					} else {
						map.put("fieldIndications", map.get("fieldIndications").concat(",").concat(next.asText()));
					}

				}
			}
		}
		System.out.println(map);
	}
}
